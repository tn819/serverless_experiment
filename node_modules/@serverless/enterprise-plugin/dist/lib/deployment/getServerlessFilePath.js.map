{"version":3,"sources":["../../../src/lib/deployment/getServerlessFilePath.js"],"names":["fileExists","filename","fs","lstat","stat","isFile","getServerlessFilePath","servicePath","ymlFilePath","path","join","yamlFilePath","jsonFilePath","jsFilePath","Promise","all","json","yml","yaml","js","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAEA,IAAMA,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEIC,iBAAGC,KAAH,CAASF,QAAT,CAFJ;;AAAA;AAETG,YAAAA,IAFS;AAAA,6CAGRA,IAAI,CAACC,MAAL,EAHQ;;AAAA;AAAA;AAAA;AAAA,6CAKR,KALQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVL,UAAU;AAAA;AAAA;AAAA,GAAhB;;SAS8BM,qB;;;;;;;0BAAf,kBAAqCC,WAArC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,WADO,GACOC,cAAKC,IAAL,CAAUH,WAAV,EAAuB,gBAAvB,CADP;AAEPI,YAAAA,YAFO,GAEQF,cAAKC,IAAL,CAAUH,WAAV,EAAuB,iBAAvB,CAFR;AAGPK,YAAAA,YAHO,GAGQH,cAAKC,IAAL,CAAUH,WAAV,EAAuB,iBAAvB,CAHR;AAIPM,YAAAA,UAJO,GAIMJ,cAAKC,IAAL,CAAUH,WAAV,EAAuB,eAAvB,CAJN;AAAA;AAAA,mBAMuBO,OAAO,CAACC,GAAR,CAAY,CAC9Cf,UAAU,CAACY,YAAD,CADoC,EAE9CZ,UAAU,CAACQ,WAAD,CAFoC,EAG9CR,UAAU,CAACW,YAAD,CAHoC,EAI9CX,UAAU,CAACa,UAAD,CAJoC,CAAZ,CANvB;;AAAA;AAAA;AAAA;AAMNG,YAAAA,IANM;AAMAC,YAAAA,GANA;AAMKC,YAAAA,IANL;AAMWC,YAAAA,EANX;;AAAA,iBAYTF,GAZS;AAAA;AAAA;AAAA;;AAAA,8CAaJT,WAbI;;AAAA;AAAA,iBAcFU,IAdE;AAAA;AAAA;AAAA;;AAAA,8CAeJP,YAfI;;AAAA;AAAA,iBAgBFK,IAhBE;AAAA;AAAA;AAAA;;AAAA,8CAiBJJ,YAjBI;;AAAA;AAAA,iBAkBFO,EAlBE;AAAA;AAAA;AAAA;;AAAA,8CAmBJN,UAnBI;;AAAA;AAAA,kBAqBP,IAAIO,KAAJ,CAAU,wDAAV,CArBO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import path from 'path'\nimport fs from 'fs-extra'\n\nconst fileExists = async (filename) => {\n  try {\n    const stat = await fs.lstat(filename)\n    return stat.isFile()\n  } catch {\n    return false\n  }\n}\n\nexport default async function getServerlessFilePath(servicePath) {\n  const ymlFilePath = path.join(servicePath, 'serverless.yml')\n  const yamlFilePath = path.join(servicePath, 'serverless.yaml')\n  const jsonFilePath = path.join(servicePath, 'serverless.json')\n  const jsFilePath = path.join(servicePath, 'serverless.js')\n\n  const [json, yml, yaml, js] = await Promise.all([\n    fileExists(jsonFilePath),\n    fileExists(ymlFilePath),\n    fileExists(yamlFilePath),\n    fileExists(jsFilePath)\n  ])\n  if (yml) {\n    return ymlFilePath\n  } else if (yaml) {\n    return yamlFilePath\n  } else if (json) {\n    return jsonFilePath\n  } else if (js) {\n    return jsFilePath\n  }\n  throw new Error('Could not find any serverless service definition file.')\n}\n"],"file":"getServerlessFilePath.js"}